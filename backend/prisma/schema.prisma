// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  firstName        String?
  lastName         String?
  email            String        @unique
  password         String
  registrationDate DateTime      @default(now())
  avatar           String?
  accounts         Account[]
  transactions     Transaction[]
  budgets          Budget[]
}

model Account {
  id             Int           @id @default(autoincrement())
  name           String
  type           AccountType
  initialBalance Decimal
  currency       String
  creationDate   DateTime      @default(now())
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  transactions   Transaction[]
}

enum AccountType {
  bank
  credit
  cash
  investment
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  transactions Transaction[]
  budgets      Budget[]
}

model Transaction {
  id          Int             @id @default(autoincrement())
  type        TransactionType
  amount      Decimal
  description String?
  accountId   Int
  userId      Int
  categoryId  Int
  account     Account         @relation(fields: [accountId], references: [id])
  user        User            @relation(fields: [userId], references: [id])
  category    Category        @relation(fields: [categoryId], references: [id])
}

enum TransactionType {
  income
  expense
}

model Budget {
  id         Int      @id @default(autoincrement())
  amount     Decimal
  startDate  DateTime
  endDate    DateTime
  userId     Int
  categoryId Int
  user       User     @relation(fields: [userId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}
