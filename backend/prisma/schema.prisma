// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  firstName       String?
  lastName        String?
  email           String        @unique
  password        String        @map("contrasena")
  registrationDate DateTime     @default(now()) @map("fecha_registro")
  avatar          String?
  accounts        Account[]
  transactions    Transaction[]
  budgets         Budget[]

  @@map("Usuarios")
}

model Account {
  id             Int      @id @default(autoincrement())
  name           String
  type           AccountType
  initialBalance Decimal  @map("saldo_inicial")
  currency       String
  creationDate   DateTime @default(now()) @map("fecha_creacion")
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  transactions   Transaction[]

  @@map("Cuentas")
}

enum AccountType {
  bank
  credit
  cash
  investment
}

model Category {
  id            Int            @id @default(autoincrement())
  name          String
  transactions  Transaction[]
  budgets       Budget[]

  @@map("Categorias")
}

model Transaction {
  id           Int       @id @default(autoincrement())
  type         TransactionType
  amount       Decimal
  description  String?
  accountId    Int
  userId       Int
  categoryId   Int
  account      Account    @relation(fields: [accountId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
  category     Category   @relation(fields: [categoryId], references: [id])

  @@map("Transacciones")
}

enum TransactionType {
  income
  expense
}

model Budget {
  id           Int       @id @default(autoincrement())
  amount       Decimal
  startDate    DateTime  @map("fecha_inicial")
  endDate      DateTime  @map("fecha_final")
  userId       Int
  categoryId   Int
  user         User      @relation(fields: [userId], references: [id])
  category     Category  @relation(fields: [categoryId], references: [id])

  @@map("Presupuestos")
}